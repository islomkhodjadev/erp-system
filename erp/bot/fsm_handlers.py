from aiogram import Router
from aiogram.types import Message

from aiogram import F

import models
import inlines


from aiogram.fsm.context import FSMContext

from aiogram.types.keyboard_button import KeyboardButton
from aiogram.types import (

    KeyboardButton,

    Message,

    ReplyKeyboardMarkup,

    
)

from fsm import Login, Support
from models import authenticate_user

from STATUS_CODES import METHOOD_STATUS
from text import translations

fsm_handlers = Router(name=__name__)
import markup


@fsm_handlers.message(F.text == "Tizimga kirmasdan foydalanish / –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑ –≤—Ö–æ–¥–∞")
async def start_bot_without_login(message: Message):
    
    await message.reply("Bizning xizmatimizdan foydalanganingiz uchun rahmat!\n"
            "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º!", reply_markup=markup.generate_buttons_not_registered())





@fsm_handlers.message(Login.username)
async def process_name(message: Message, state: FSMContext) -> None:
    
    if not message.text:
        await message.answer(
            text="Iltimos, foydalanuvchi nomini kiriting üá∫üáø"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üá∑üá∫",
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[
                    [
                        KeyboardButton(text="Tizimga kirmasdan foydalanish / –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑ –≤—Ö–æ–¥–∞"),
                    ],
                    [
                        KeyboardButton(text="/login")
                    ]
                ],
                resize_keyboard=True,
            )
        )
    else:
        await state.update_data(username=message.text)
        await state.set_state(Login.password)
        await message.answer(
            "Iltimos, parolingizni kiriting üîë"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å üîë",
        )


@fsm_handlers.message(Login.password)
async def process_password(message: Message, state: FSMContext) -> None:
    
    if not message.text:
        await message.answer(
            "Iltimos, parolingizni kiriting üîë"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å üîë",
        )
    else:
        await state.update_data(password=message.text)
        
        data = await state.get_data()
        
        
        status = await authenticate_user(data["username"], data["password"], message.from_user.id, message.from_user.username)
        if (status == METHOOD_STATUS.SUCCESSFUL):
            await message.answer(
            "Iltimos, tilni tanlang\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=inlines.generate_choose_language_button())


        elif (status == METHOOD_STATUS.BLOCKED):
            await message.answer(
                "Siz bloklanganingiz uchun kirish mumkin emas. Iltimos, qo'llab-quvvatlash bilan bog'laning. ‚ùå"
                "–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, –∏ –≤—Ö–æ–¥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. ‚ùå"
            )
        elif (status == METHOOD_STATUS.INVALID):
            await message.answer("Parol noto‚Äòg‚Äòri."
                "–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π.")
        elif (status == METHOOD_STATUS.NOTFOUND):
            await message.answer("Profile mavjud emas."
                     "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")


        await state.clear()
        await message.delete()


from aiogram.methods.send_message import SendMessage

@fsm_handlers.message(Support.message)
async def process_support_message(message: Message, state: FSMContext) -> None:
    if not message.text:
        language = await models.get_language(message.from_user.id)
        await message.answer(translations[language]["write_question"])
    text = message.text
    await state.clear()

    text = await models.create_support_message_by_telegram_id(message.from_user.id, text)
    chat_id = await models.get_support_chat_id()
    await message.bot(SendMessage(chat_id=chat_id, text=text))
    await message.answer("–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ\nBizning qo'llab-quvvatlash jamoamiz imkon qadar tezroq javob beradi.")


